{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterModule } from '@angular/router';\nimport { EMPTY } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { Role } from '../../enums/role.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/authentication.service\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nfunction TopBarComponent_Conditional_1_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TopBarComponent_Conditional_1_Conditional_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TopBarComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TopBarComponent_Conditional_1_Conditional_0_Template, 3, 0, \"button\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx.role === ctx_r1.Role.Admin ? 0 : -1);\n  }\n}\nexport let TopBarComponent = /*#__PURE__*/(() => {\n  class TopBarComponent {\n    authService;\n    toggleSidenav = new EventEmitter();\n    user$ = EMPTY; // Replace 'any' with your actual user type\n    Role = Role; // Expose the Role enum to the template\n    constructor(authService) {\n      this.authService = authService;\n    }\n    ngOnInit() {\n      this.user$ = this.authService.loggedUser();\n    }\n    toggle() {\n      this.toggleSidenav.emit();\n    }\n    static ɵfac = function TopBarComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TopBarComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TopBarComponent,\n      selectors: [[\"app-top-bar\"]],\n      outputs: {\n        toggleSidenav: \"toggleSidenav\"\n      },\n      decls: 14,\n      vars: 3,\n      consts: [[\"color\", \"primary\", 1, \"menu-bar\"], [1, \"logo\"], [1, \"spacer\"], [\"mat-button\", \"\", \"routerLink\", \"/\"], [\"mat-button\", \"\", \"routerLink\", \"site/about\"], [\"mat-button\", \"\", \"routerLink\", \"/settings\"], [\"mat-button\", \"\", \"routerLink\", \"/admin\"], [\"mat-icon-button\", \"\", 1, \"menu-button\"], [\"mat-icon-button\", \"\", 1, \"menu-button\", 3, \"click\"]],\n      template: function TopBarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n          i0.ɵɵtemplate(1, TopBarComponent_Conditional_1_Template, 1, 1);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵelementStart(3, \"span\", 1);\n          i0.ɵɵtext(4, \"Recruiting App\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"span\", 2);\n          i0.ɵɵelementStart(6, \"button\", 3);\n          i0.ɵɵtext(7, \"Inicio\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 4);\n          i0.ɵɵtext(9, \"Acerca\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 5);\n          i0.ɵɵtext(11, \"Configuraci\\u00F3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 6);\n          i0.ɵɵtext(13, \"Admin\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          let tmp_0_0;\n          i0.ɵɵadvance();\n          i0.ɵɵconditional((tmp_0_0 = i0.ɵɵpipeBind1(2, 1, ctx.user$)) ? 1 : -1, tmp_0_0);\n        }\n      },\n      dependencies: [MatToolbarModule, i2.MatToolbar, MatButtonModule, i3.MatButton, i3.MatIconButton, MatIconModule, i4.MatIcon, RouterModule, i5.RouterLink, CommonModule, i6.AsyncPipe],\n      styles: [\".menu-bar[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;z-index:1000}.spacer[_ngcontent-%COMP%]{flex:1 1 auto}.logo[_ngcontent-%COMP%]{font-weight:700;font-size:20px;margin-right:20px}[_nghost-%COMP%]{display:block}\"]\n    });\n  }\n  return TopBarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}