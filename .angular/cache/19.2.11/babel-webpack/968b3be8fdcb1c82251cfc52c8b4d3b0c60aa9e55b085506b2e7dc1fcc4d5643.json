{"ast":null,"code":"import * as ProductsSelector from \"../selectors/products.selectors\";\nimport * as ProductActions from \"../actions/products.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let ProductFacade = /*#__PURE__*/(() => {\n  class ProductFacade {\n    store;\n    constructor(store) {\n      this.store = store;\n      // This is where you would inject your store and selectors to manage state\n    }\n    // Example method to get products from the store\n    Products() {\n      return this.store.select(ProductsSelector.GetProducts);\n    }\n    getProducts() {\n      this.store.dispatch(ProductActions.GetProducts());\n    }\n    // Example method to add a product to the store\n    addProduct(product) {\n      // Logic to dispatch an action to add a product\n      this.store.dispatch(ProductActions.CreateProduct({\n        product\n      }));\n    }\n    getProductById(id) {\n      this.store.dispatch(ProductActions.GetProductById({\n        id\n      }));\n    }\n    getSelectedProduct() {\n      return this.store.select(ProductsSelector.GetSelectedProduct);\n    }\n    setSelectedProduct(product) {\n      this.store.dispatch(ProductActions.SetSelectedProduct({\n        product\n      }));\n    }\n    static ɵfac = function ProductFacade_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProductFacade)(i0.ɵɵinject(i1.Store));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductFacade,\n      factory: ProductFacade.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ProductFacade;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}