{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../State/facades/inventory-facade\";\nimport * as i3 from \"../../../State/facades/product-facade\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/datepicker\";\nfunction InventoryMovementsComponent_Conditional_7_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", product_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", product_r2.name, \" \");\n  }\n}\nfunction InventoryMovementsComponent_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵrepeaterCreate(0, InventoryMovementsComponent_Conditional_7_For_1_Template, 2, 2, \"mat-option\", 8, i0.ɵɵrepeaterTrackByIdentity);\n  }\n  if (rf & 2) {\n    i0.ɵɵrepeater(ctx);\n  }\n}\nexport let InventoryMovementsComponent = /*#__PURE__*/(() => {\n  class InventoryMovementsComponent {\n    fb;\n    inventoryFacade;\n    productsFacade;\n    movementForm;\n    products$;\n    constructor(fb, inventoryFacade, productsFacade) {\n      this.fb = fb;\n      this.inventoryFacade = inventoryFacade;\n      this.productsFacade = productsFacade;\n    }\n    ngOnInit() {\n      this.movementForm = this.fb.group({\n        product: ['', Validators.required],\n        quantity: [0, [Validators.required, Validators.min(1)]],\n        reason: [''],\n        date: [new Date(), Validators.required],\n        isIncoming: [true, Validators.required]\n      });\n      this.productsFacade.getProducts();\n      this.products$ = this.productsFacade.Products();\n    }\n    onSubmit() {\n      if (this.movementForm.valid) {\n        const movement = this.movementForm.value;\n        this.inventoryFacade.addInventoryMovement(movement);\n        this.movementForm.reset();\n      }\n    }\n    static ɵfac = function InventoryMovementsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InventoryMovementsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.InventoryFacade), i0.ɵɵdirectiveInject(i3.ProductFacade));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InventoryMovementsComponent,\n      selectors: [[\"app-inventory-movements\"]],\n      features: [i0.ɵɵProvidersFeature([provideNativeDateAdapter()])],\n      decls: 45,\n      vars: 9,\n      consts: [[\"picker\", \"\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"row\"], [1, \"col-sm-12\", \"col-xs-12\", \"col-md-6\"], [\"appearance\", \"fill\", 1, \"flex-field\"], [\"formControlName\", \"product\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"quantity\", \"required\", \"\", \"placeholder\", \"Cantidad\"], [\"formControlName\", \"isIncoming\", \"required\", \"\"], [3, \"value\"], [\"matInput\", \"\", \"formControlName\", \"date\", \"required\", \"\", \"placeholder\", \"Fecha\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"matInput\", \"\", \"formControlName\", \"reason\", \"placeholder\", \"Motivo del movimiento\"], [1, \"flex-field\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function InventoryMovementsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function InventoryMovementsComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(1, \"div\", 2)(2, \"div\", 3)(3, \"mat-form-field\", 4)(4, \"mat-label\");\n          i0.ɵɵtext(5, \"Producto\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"mat-select\", 5);\n          i0.ɵɵtemplate(7, InventoryMovementsComponent_Conditional_7_Template, 2, 0);\n          i0.ɵɵpipe(8, \"async\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 3)(11, \"mat-form-field\", 4)(12, \"mat-label\");\n          i0.ɵɵtext(13, \"Cantidad\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 6);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(15, \"div\", 2)(16, \"div\", 3)(17, \"mat-form-field\", 4)(18, \"mat-label\");\n          i0.ɵɵtext(19, \"Tipo de movimiento\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"mat-select\", 7)(21, \"mat-option\", 8);\n          i0.ɵɵtext(22, \"Entrada\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"mat-option\", 8);\n          i0.ɵɵtext(24, \"Salida\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(25, \"div\", 2)(26, \"div\", 3)(27, \"mat-form-field\", 4)(28, \"mat-label\");\n          i0.ɵɵtext(29, \"Fecha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(30, \"input\", 9)(31, \"mat-datepicker-toggle\", 10)(32, \"mat-datepicker\", null, 0);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(34, \"div\", 2)(35, \"div\", 3)(36, \"mat-form-field\", 4)(37, \"mat-label\");\n          i0.ɵɵtext(38, \"Motivo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(39, \"input\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(40, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(41, \"div\", 2)(42, \"div\", 3)(43, \"button\", 13);\n          i0.ɵɵtext(44, \" Guardar Movimiento \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          const picker_r3 = i0.ɵɵreference(33);\n          i0.ɵɵproperty(\"formGroup\", ctx.movementForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵconditional((tmp_2_0 = i0.ɵɵpipeBind1(8, 7, ctx.products$)) ? 7 : -1, tmp_2_0);\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"value\", true);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", false);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"matDatepicker\", picker_r3);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", picker_r3);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"disabled\", ctx.movementForm.invalid);\n        }\n      },\n      dependencies: [CommonModule, i4.AsyncPipe, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i5.MatFormField, i5.MatLabel, i5.MatSuffix, MatInputModule, i6.MatInput, MatSelectModule, i7.MatSelect, i7.MatOption, MatButtonModule, i8.MatButton, MatDatepickerModule, i9.MatDatepicker, i9.MatDatepickerInput, i9.MatDatepickerToggle],\n      encapsulation: 2\n    });\n  }\n  return InventoryMovementsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}